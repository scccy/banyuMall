# 网关服务 - 生产环境配置
# 遵循CONFIG-001规范：统一端口8080，系统变量管理敏感信息

server:
  port: 8080  # 生产环境统一端口
  # 性能优化配置
  connection-timeout: 20000
  read-timeout: 30000
  write-timeout: 30000
  max-connections: 16384
  threads:
    max: 400
    min: 50

spring:
  application:
    name: service-gateway
  
  # 配置导入 - 从Nacos加载配置
  config:
    import: nacos:${spring.application.name}.${spring.cloud.nacos.config.file-extension}
  
  # 明确指定为响应式Web应用
  main:
    web-application-type: reactive
    lazy-initialization: false
  
  jmx:
    enabled: true
  
  # 自动配置排除 - 避免WebMvc与WebFlux冲突
  autoconfigure:
    exclude:
      - org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration
      - org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration
      - org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration
      - org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration
      - org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration
  
  # Nacos服务注册与发现配置
  cloud:
    nacos:
      discovery:
        server-addr: ${NACOS_SERVER}
        username: ${NACOS_USERNAME}
        password: ${NACOS_PASSWORD}
        namespace: ${NACOS_NAMESPACE:prod}
        group: ${NACOS_GROUP:DEFAULT_GROUP}
        register-enabled: true
        heart-beat-interval: 5000
        heart-beat-timeout: 15000
        ip-delete-timeout: 30000
      config:
        server-addr: ${NACOS_SERVER}
        username: ${NACOS_USERNAME}
        password: ${NACOS_PASSWORD}
        namespace: ${NACOS_NAMESPACE:prod}
        group: ${NACOS_GROUP:DEFAULT_GROUP}
        file-extension: yaml
        refresh-enabled: true
        timeout: 3000
        retry-time: 2000
        long-poll-timeout: 46000
    
    # 网关路由配置
    gateway:
      routes:
        - id: auth-service
          uri: lb://service-auth
          predicates:
            - Path=/auth/**
          filters:
            - StripPrefix=0
        
        - id: user-service
          uri: lb://service-user
          predicates:
            - Path=/service/user/**
          filters:
            - StripPrefix=1
        
        - id: core-publisher-service
          uri: lb://core-publisher
          predicates:
            - Path=/core/publisher/**
          filters:
            - StripPrefix=1
      
      # 全局CORS配置
      globalcors:
        cors-configurations:
          '[/**]':
            allowedOrigins: ${ALLOWED_ORIGINS:https://yourdomain.com}
            allowedMethods: GET,POST,PUT,DELETE,OPTIONS
            allowedHeaders: "*"
            allowCredentials: true

# 管理端点配置（生产环境限制暴露）
management:
  endpoints:
    web:
      exposure:
        include: health,info
  endpoint:
    health:
      show-details: never  # 不暴露详细健康信息
    info:
      enabled: true
  info:
    env:
      enabled: true
    git:
      mode: full

# 日志配置（生产环境）
logging:
  level:
    com.origin.gateway: warn
    org.springframework.cloud.gateway: warn
    org.springframework.web: error
    org.apache.logging.log4j.status: ERROR
    org.apache.logging.log4j.core.config: ERROR
    root: error
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: logs/service-gateway.log
    max-size: 500MB
    max-history: 60