# 认证服务 - 主配置文件模板
# 注意：请将敏感信息配置在环境变量或Nacos配置中心中

server:
  port: 8081
  servlet:
    context-path: /auth

spring:
  # 配置导入 - 从Nacos加载配置
  config:
    import: nacos:${spring.application.name}.${spring.cloud.nacos.config.file-extension}
  application:
    name: service-auth

  cloud:
    nacos:
      discovery:
        server-addr: ${NACOS_SERVER_ADDR:localhost:8848}
        username: ${NACOS_USERNAME:nacos}
        password: ${NACOS_PASSWORD:nacos}
        namespace: ${NACOS_NAMESPACE:public}
        group: ${NACOS_GROUP:DEFAULT_GROUP}
        # 注册配置
        register-enabled: true
        # 心跳间隔
        heart-beat-interval: 5000
        # 心跳超时时间
        heart-beat-timeout: 15000
        # 实例删除超时时间
        ip-delete-timeout: 30000
      config:
        server-addr: ${NACOS_SERVER_ADDR:localhost:8848}
        username: ${NACOS_USERNAME:nacos}
        password: ${NACOS_PASSWORD:nacos}
        namespace: ${NACOS_NAMESPACE:public}
        group: ${NACOS_GROUP:DEFAULT_GROUP}
        file-extension: yaml
        # 配置刷新
        refresh-enabled: true

  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://${DB_HOST:localhost}:${DB_PORT:3306}/${DB_NAME:banyu_mall}?serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=utf-8&useSSL=false
    username: ${DB_USERNAME:root}
    password: ${DB_PASSWORD:password}
  
  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}
      database: 0
      password: ${REDIS_PASSWORD:}
      timeout: 5000

# MyBatis-Plus配置
mybatis-plus:
  configuration:
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
  mapper-locations: classpath:mapper/*.xml
  type-aliases-package: com.origin.auth.entity
  global-config:
    db-config:
      id-type: auto
      logic-delete-field: isDeleted
      logic-delete-value: 1
      logic-not-delete-value: 0

# 日志配置
logging:
  level:
    root: info
    com.origin: debug

# JWT配置
jwt:
  secret: ${JWT_SECRET:your-secret-key-here-should-be-at-least-32-bytes-long}
  expiration: 3600000  # 1小时
  header: Authorization
  tokenPrefix: Bearer

# 阿里云OSS配置
aliyun:
  oss:
    enabled: ${OSS_ENABLED:false}
    endpoint: ${OSS_ENDPOINT:oss-cn-beijing.aliyuncs.com}
    accessKeyId: ${OSS_ACCESS_KEY_ID:}
    accessKeySecret: ${OSS_ACCESS_KEY_SECRET:}
    bucketName: ${OSS_BUCKET_NAME:}
    region: ${OSS_REGION:cn-beijing} 